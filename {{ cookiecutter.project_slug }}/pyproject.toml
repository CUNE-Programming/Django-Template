[tool.poetry]
name = "{{ cookiecutter.project_slug}}"
version = "0.1.0"
description = ""
authors = ["{{ cookiecutter.author_name}} <{{ cookiecutter.author_email }}>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0"
django-vite = "^3.0.1"
django-environ = "^0.11.2"
Pillow = "^10.1.0"
django-extensions = "^3.2.3"
{% if cookiecutter.stack == "THAD" %}django-htmx = "^1.17.2"
django-template-partials = "^23.4"{%- endif %}
{% if cookiecutter.stack == "DIRT" %}inertia-django = "^0.5.3"{%- endif %}

[tool.poetry.dev-dependencies]
ruff = "^0.1.8"
pytest = "^7.4.3"
pytest-django = "^4.7.0"
faker = "^21.0.0"
pytest-playwright = "^0.4.3"
devtools = "^0.12.2"
django-debug-toolbar = "^4.2.0"
djlint = "^1.34.0"
Werkzeug = "^3.0.1"
ipython = "^ 8.19.0"
watchdog = "^3.0.0"
django-browser-reload = "^1.12.1"
{% if cookiecutter.init_git %}pre-commit = "^3.6.0"{% endif %}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "project.settings"
python_files = "test_*.py tests.py *_test.py"

[tool.djlint]
profile = "django"
indent = 2

[tool.ruff]
target-version = "py312"
ignore = ["F401"]
extend-select = ["C90", "I", "DJ", "PT", "E", "W", "F"]

[tool.pyright]
pythonVersion = "3.12"
deprecateTypeAliases = true
reportImportCycles = true
reportWildcardImportFromLibrary = "error"
reportPrivateUsage = true
